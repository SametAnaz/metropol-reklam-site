=============================================================================
METROPOL REKLAM - FIREBASE ENVIRONMENT VARIABLES SETUP GUIDE
=============================================================================

1. .env.local DOSYASINDA TANIMLANMASI GEREKEN DEĞIŞKENLER:
=============================================================================

Aşağıdaki satırları .env.local dosyasına ekleyin:

# Firebase Configuration
NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyDFBZIrWuxcBzJxsJoLsjt2pY-9CIbr-f0
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=metropol-reklam.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=metropol-reklam
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=metropol-reklam.firebasestorage.app
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=481863979305
NEXT_PUBLIC_FIREBASE_APP_ID=1:481863979305:web:91a18d019cb2fa9fc32738

# NextAuth Secret (güvenlik için)
NEXTAUTH_SECRET=your_random_secret_key_here
NEXTAUTH_URL=http://localhost:3000

=============================================================================
2. FIREBASE AUTHENTICATION VE FIRESTORE KURULUMU:
=============================================================================

A) Authentication Kurulumu:
-------------------------
1. Firebase Console → Authentication → Sign-in method
2. "Email/Password" provider'ı etkinleştirin
3. "Save" butonuna tıklayın

B) Firestore Database Kurulumu:
-----------------------------
1. Firebase Console → Firestore Database
2. "Create Database" butonuna tıklayın
3. Production mode'u seçin
4. Bölge olarak "eur3 (europe-west)" seçin
5. "Enable" butonuna tıklayın

C) Firestore Güvenlik Kuralları:
------------------------------
Firebase Console → Firestore Database → Rules sekmesine aşağıdaki kuralları ekleyin:

```
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Yardımcı fonksiyonlar
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserAuthenticated(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function isAdmin() {
      return isAuthenticated() && getUserData().role == 'admin';
    }
    
    // Users koleksiyonu kuralları
    match /users/{userId} {
      // Okuma kuralları:
      // - Kullanıcı kendi belgesini okuyabilir
      // - Adminler tüm kullanıcıları okuyabilir
      allow read: if isUserAuthenticated(userId) || isAdmin();
      
      // Oluşturma kuralları:
      // - Yeni kayıt olan kullanıcı kendi belgesini oluşturabilir
      // - Sadece 'user' rolü ile oluşturulabilir
      allow create: if isUserAuthenticated(userId) 
        && request.resource.data.role == 'user'
        && request.resource.data.email == request.auth.token.email;
      
      // Güncelleme kuralları:
      // - Kullanıcılar kendi bilgilerini güncelleyebilir (rol hariç)
      // - Adminler tüm kullanıcıların bilgilerini güncelleyebilir
      allow update: if (isUserAuthenticated(userId) 
        && request.resource.data.role == resource.data.role)
        || isAdmin();
      
      // Silme kuralları:
      // - Sadece adminler kullanıcı silebilir
      allow delete: if isAdmin();
    }
  }
}
```

=============================================================================
3. KULLANICI ROLLERİ VE YÖNETİMİ:
=============================================================================

A) Varsayılan Kullanıcı Kaydı:
----------------------------
- Yeni kayıt olan her kullanıcı otomatik olarak "user" rolü ile kaydedilir
- Kullanıcı bilgileri hem Authentication hem de Firestore'a kaydedilir

B) Admin Rolü Atama:
------------------
1. Firebase Console → Firestore Database → users koleksiyonu
2. İlgili kullanıcının dokümanını bulun
3. "role" alanını "admin" olarak güncelleyin
4. Değişikliği kaydedin

NOT: Rol değişikliği anında etkili olur, kullanıcının yeniden giriş yapmasına gerek yoktur.

=============================================================================
4. GÜVENLİK NOTLARI:
=============================================================================

- Kullanıcılar kendi rollerini değiştiremezler
- Sadece adminler diğer kullanıcıların rollerini değiştirebilir
- Authentication ve Firestore senkronize çalışır
- Tüm işlemler güvenlik kuralları ile korunur

=============================================================================
5. HATA DURUMUNDA KONTROL LİSTESİ:
=============================================================================

1. Authentication'da kullanıcının var olduğunu kontrol edin
2. Firestore'da users/{userId} dokümanının var olduğunu kontrol edin
3. Firestore kurallarının doğru yapılandırıldığını kontrol edin
4. Kullanıcı rolünün doğru atandığını kontrol edin

=============================================================================
6. FIREBASE CONFIGURATION BİLGİLERİ (HAZIR):
=============================================================================

✅ Firebase projeniz zaten oluşturulmuş! Aşağıdaki bilgiler alınmış:

const firebaseConfig = {
  apiKey: "AIzaSyDFBZIrWuxcBzJxsJoLsjt2pY-9CIbr-f0",
  authDomain: "metropol-reklam.firebaseapp.com",
  projectId: "metropol-reklam", 
  storageBucket: "metropol-reklam.firebasestorage.app",
  messagingSenderId: "481863979305",
  appId: "1:481863979305:web:91a18d019cb2fa9fc32738"
};

Bu bilgiler yukarıdaki .env.local değişkenlerine karşılık gelir.

=============================================================================
7. FIREBASE AUTHENTICATION KURULUMU (YAPILMASI GEREKEN):
=============================================================================

✅ ADIM 1: Firebase Console'a gidin
- https://console.firebase.google.com/ adresine gidin
- "metropol-reklam" projenizi seçin

⚠️ ADIM 2: Authentication'ı etkinleştirin
- Sol menüden "Authentication" seçin
- "Get started" butonuna tıklayın (eğer henüz etkinleştirilmemişse)

⚠️ ADIM 3: Sign-in method'ları etkinleştirin
- "Sign-in method" sekmesine gidin
- "Email/Password" seçeneğini bulun
- "Enable" toggleını açın ve "Save" edin

⚠️ ADIM 4: İlk admin kullanıcısını oluşturun
- "Users" sekmesine gidin
- "Add user" butonuna tıklayın
- Admin email ve şifresini girin (örn: admin@metropolreklam.com)
- Bu admin hesabıyla /admin/login sayfasından giriş yapabilirsiniz

=============================================================================
8. NEXTAUTH_SECRET OLUŞTURMA:
=============================================================================

Güvenli bir secret key oluşturmak için aşağıdaki yöntemlerden birini kullanın:

YÖNTEM 1: Online generator kullanın
- https://generate-secret.vercel.app/32 adresine gidin
- Oluşturulan key'i kopyalayın

YÖNTEM 2: Terminal'de oluşturun
- Terminal açın ve şu komutu çalıştırın:
  openssl rand -base64 32

YÖNTEM 3: Node.js ile oluşturun
- Terminal'de şu komutu çalıştırın:
  node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"

=============================================================================
9. TAM .env.local DOSYASI (HAZIR KULLANIM):
=============================================================================

Aşağıdaki içeriği kopyalayıp .env.local dosyasına yapıştırın:

# Firebase Configuration (Metropol Reklam)
NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyDFBZIrWuxcBzJxsJoLsjt2pY-9CIbr-f0
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=metropol-reklam.firebaseapp.com
NEXT_PUBLIC_FIREBASE_PROJECT_ID=metropol-reklam
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=metropol-reklam.firebasestorage.app
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=481863979305
NEXT_PUBLIC_FIREBASE_APP_ID=1:481863979305:web:91a18d019cb2fa9fc32738

# NextAuth Configuration (NEXTAUTH_SECRET'i değiştirin!)
NEXTAUTH_SECRET=P8fJ3kL9mN2qR5sT7vW0xY1zA4bC6dE8
NEXTAUTH_URL=http://localhost:3000

⚠️ ÖNEMLİ: NEXTAUTH_SECRET değerini yukarıdaki yöntemlerden biriyle oluşturduğunuz 
güvenli bir key ile değiştirin!

=============================================================================
10. HIZLI KURULUM ADIMLARı:
=============================================================================

1. ✅ Firebase projesi oluşturuldu → TAMAM
2. ✅ Web app kaydedildi → TAMAM
3. ⚠️ .env.local dosyası oluşturun → YAPILACAK
4. ⚠️ NEXTAUTH_SECRET oluşturun → YAPILACAK
5. ⚠️ Firebase Authentication'ı etkinleştirin → YAPILACAK
6. ⚠️ Email/Password provider'ını açın → YAPILACAK
7. ⚠️ İlk admin kullanıcısı oluşturun → YAPILACAK
8. ⚠️ Dev server'ı yeniden başlatın → YAPILACAK

=============================================================================
11. PRODUCTION İÇİN EK AYARLAR:
=============================================================================

Production ortamında:
- NEXTAUTH_URL'yi gerçek domain'inizle değiştirin (örn: https://metropolreklam.com)
- Firebase Console'da "Authorized domains" listesine production domain'inizi ekleyin:
  - Authentication → Settings → Authorized domains → "Add domain"

=============================================================================
12. TEST ETMEK İÇİN:
=============================================================================

1. .env.local dosyasını proje root dizinine oluşturun
2. Yukarıdaki değerleri kopyalayıp yapıştırın
3. NEXTAUTH_SECRET'i güvenli bir değerle değiştirin
4. Firebase Authentication kurulumunu tamamlayın
5. Development server'ı yeniden başlatın: npm run dev
6. http://localhost:3000 adresine gidin
7. Navbar'daki "Müşteri Girişi" butonunu test edin
8. Yeni hesap oluşturmayı deneyin

=============================================================================
13. SORUN GİDERME:
=============================================================================

❌ "Firebase not initialized" hatası:
- .env.local dosyasının proje root dizininde olduğundan emin olun
- Development server'ı yeniden başlatın (Ctrl+C, sonra npm run dev)

❌ "Auth domain not authorized" hatası:
- Firebase Console → Authentication → Settings → Authorized domains
- localhost'un listede olduğundan emin olun

❌ "Email/password provider not enabled" hatası:
- Firebase Console → Authentication → Sign-in method
- Email/Password'ün enabled olduğundan emin olun

=============================================================================

🎉 Firebase kurulumu tamamlandıktan sonra müşteri giriş sistemi tamamen 
çalışır durumda olacak!

Herhangi bir sorun yaşarsanız Firebase Console'un sol alt köşesindeki 
"?" işaretinden yardım alabilir veya Firebase documentation'ına 
başvurabilirsiniz: https://firebase.google.com/docs

============================================================================= 
       email: "admin@metropolreklam.com" (oluşturduğunuz email)
       role: "admin"
       createdAt: [timestamp şu anki zaman]

=============================================================================
MANUEL KOLEKSİYON OLUŞTURMA ADIMLARI:
=============================================================================

Eğer otomatik koleksiyon oluşturma çalışmazsa, manuel olarak şu adımları izleyin:

1. Firebase Console'a gidin (https://console.firebase.google.com)
2. Projenizi seçin
3. Sol menüden "Firestore Database" seçin
4. "Start collection" veya "Koleksiyon başlat" butonuna tıklayın
5. Collection ID olarak "users" yazın
6. "Next" veya "İleri" butonuna tıklayın
7. İlk doküman için:
   - Document ID: "Auto-ID" seçeneğini kullanın
   - Alanlar:
     - Field: email, Type: string, Value: admin@metropolreklam.com
     - Field: role, Type: string, Value: admin
     - Field: createdAt, Type: timestamp, Value: [current timestamp]
     - Field: updatedAt, Type: timestamp, Value: [current timestamp]
8. "Save" veya "Kaydet" butonuna tıklayın

NOT: Bu adımları sadece koleksiyon otomatik oluşmazsa uygulayın.
Normalde uygulama ilk kullanıcı kaydında koleksiyonu otomatik oluşturacaktır.

=============================================================================